{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1e8007ad",
   "metadata": {},
   "source": [
    "<H1 style=\"text-align: center;\">\"DSC 530 Final Project\", EDA Coding</H1>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78401a95",
   "metadata": {},
   "source": [
    "## Outlining the Statistical Question/Hypothesis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6c65e80",
   "metadata": {},
   "source": [
    "Learning from the dataset entitled \"Price Prediction of Diamond,\" it is possible to construct a statistical inquiry or conjecture pertaining to the variables that impact the valuation of diamonds. An illustrative hypothesis is presented below:\n",
    "\n",
    "The hypothesis posits that there exists a significant correlation between the carat weight of a diamond and its price.\n",
    "\n",
    "To evaluate this hypothesis, a statistical analysis can be conducted to investigate the correlation between the carat weight and the price of diamonds within the dataset. Additional factors that can be examined to determine their impact on diamond pricing include cut, color, clarity, and depth.\n",
    "\n",
    "To initiate the analysis, the ensuing code snippet can be employed to compute the correlation coefficient linking carat and price:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "92473cbe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation coefficient between carat and price: 0.9215913011934762\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy.stats import lognorm\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import statsmodels.api as sm\n",
    "\n",
    "# Load the dataset\n",
    "df = pd.read_csv(\"diamonds.csv\")\n",
    "\n",
    "# Calculate the correlation coefficient between carat and price\n",
    "correlation = df['carat'].corr(df['price'])\n",
    "print(\"Correlation coefficient between carat and price:\", correlation)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9bac046",
   "metadata": {},
   "source": [
    "The presented code excerpt provides the correlation coefficient, a metric that denotes the magnitude and orientation of the association between the variables of carat and price. The presence of a positive correlation coefficient indicates that there exists a tendency for the price to increase as the carat weight increases.\n",
    "\n",
    "Through the utilization of statistical analysis and the examination of multiple factors, it is possible to enhance the precision of one's research question or hypothesis. Subsequently, supplementary analyses can be conducted as necessary."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e88186a",
   "metadata": {},
   "source": [
    "## A minimum of 5 variables in your dataset used during your analysis (for help with selecting, the author made his selection on page 6 of your book). "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b504f1f",
   "metadata": {},
   "source": [
    "The dataset we have chosen for the exploratory data analysis is diamonds data that contains 10 different attributes and we are foucsing most of them for analysis. These attributes provide information about various characteristics of diamonds, including their physical measurements, quality factors (cut, color, clarity), and the corresponding price.\n",
    "\n",
    "1. carat: The weight of the diamond (numeric).\n",
    "\n",
    "2. cut: Quality of the diamond's cut (categorical: Fair, Good, Very Good, Premium, Ideal).\n",
    "\n",
    "3. color: Color of the diamond, ranging from J (worst) to D (best) (categorical).\n",
    "\n",
    "4. clarity: Clarity rating of the diamond, ranging from I1 (worst) to IF (best) (categorical).\n",
    "\n",
    "5. depth: The depth percentage, calculated as the ratio of the diamond's depth to its average diameter (numeric).\n",
    "\n",
    "6. table: The width of the top of the diamond relative to the widest point (numeric).\n",
    "\n",
    "7. price: The price of the diamond in USD (numeric).\n",
    "\n",
    "8. x: Length of the diamond in mm (numeric).\n",
    "\n",
    "9. y: Width of the diamond in mm (numeric).\n",
    "\n",
    "10. z: Depth of the diamond in mm (numeric)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ba72128",
   "metadata": {},
   "source": [
    "## Consider what you think could have an impact on your question – remember this is never perfect, so don’t be worried if you miss one (Chapter 1)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2c24463",
   "metadata": {},
   "source": [
    "When examining the correlation between diamond price and carat weight, it is imperative to take into account potential confounding variables and limitations of the dataset that may affect the relationship. Several factors should be taken into consideration.\n",
    "\n",
    "1. Cut Quality: The price of a diamond can be considerably influenced by its cut quality. Typically, an elevated level of cut quality is correlated with an increased cost. It is imperative to consider the cut quality as a plausible confounding factor while scrutinizing the correlation between carat weight and price.\n",
    "\n",
    "2. Color & Clarity: The price of a diamond is influenced by significant factors such as its color and clarity. Diamonds exhibiting superior color and clarity grades are typically associated with elevated price points. When evaluating the effect on the price of a diamond, it is advisable to take into account these variables in combination with the carat weight.\n",
    "\n",
    "3. Other Characteristics: The dataset may include additional variables such as depth, table, symmetry, and polish, which can also affect the price of a diamond. It is imperative to consider these factors in order to prevent the inadvertent omission of potential confounding variables.\n",
    "\n",
    "4. Market Factors: Diamond prices can be influenced by external market factors such as fluctuations in the diamond market, economic conditions, and market demand. While these factors may not be directly included in the dataset, their potential impact should be acknowledged.\n",
    "\n",
    "It is imperative to adopt a comprehensive perspective when conducting an analysis, as the correlation between the weight of a diamond in carats and its price may be subject to the influence of multiple factors. By considering these potential confounders and limitations, you can conduct a more comprehensive analysis to better understand the impact of carat weight on diamond price.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bee08781",
   "metadata": {},
   "source": [
    "## Describe what the 5 variables mean in the dataset (Chapter 1).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f411bc73",
   "metadata": {},
   "source": [
    "1. Carat: This variable represents the weight of the diamond. Carat is a unit of measurement specifically used for diamonds and gemstones. It is a numeric variable that indicates the size of the diamond, with a higher carat weight typically associated with a larger and more valuable diamond.\n",
    "\n",
    "2. Cut: The cut quality of a diamond refers to how well the diamond has been cut and shaped by a diamond cutter. It is a categorical variable with five possible values: Fair, Good, Very Good, Premium, and Ideal. These values indicate the quality of the diamond's cut, with \"Ideal\" being the highest quality and \"Fair\" being the lowest.\n",
    "\n",
    "3. Color: The color of a diamond refers to the presence of any noticeable hue in the diamond. This variable is a categorical attribute, ranging from J (worst) to D (best). A lower color grade indicates a more yellow or brownish hue, while a higher grade indicates a more colorless diamond. Therefore, \"D\" represents the highest color grade.\n",
    "\n",
    "4. Clarity: The clarity of a diamond refers to the presence of any internal or external flaws, known as inclusions or blemishes, respectively. This variable is a categorical attribute, ranging from I1 (worst) to IF (best). A lower clarity grade indicates more visible flaws, while a higher grade indicates a higher level of clarity.\n",
    "\n",
    "5. Price: This variable represents the price of the diamond in US dollars. It is a numeric variable that indicates the monetary value assigned to the diamond. The price can vary based on various factors such as carat weight, cut quality, color, clarity, and other attributes.\n",
    "\n",
    "These variables provide crucial information about the physical characteristics, quality factors, and price of the diamonds in the dataset. By analyzing these variables, you can gain insights into the factors that influence the pricing of diamonds."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e08a45d5",
   "metadata": {},
   "source": [
    "## Include a histogram of each of the 5 variables – in your summary and analysis, identify any outliers and explain the reasoning for them being outliers and how you believe they should be handled (Chapter 2)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a836b41",
   "metadata": {},
   "source": [
    "Here's a summary and analysis of each of the five variables in the \"Price Prediction of Diamond\" dataset, including histograms and identification of potential outliers:\n",
    "\n",
    "1. Carat:\n",
    "The carat variable represents the weight of the diamond. Let's visualize its distribution using a histogram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e8d52dee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "sns.histplot(data=df, x='carat', bins=30)\n",
    "plt.title('Distribution of Carat')\n",
    "plt.xlabel('Carat')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d011960",
   "metadata": {},
   "source": [
    "The histogram of carat values shows a right-skewed distribution, indicating that smaller carat weights are more common. Outliers in this variable may indicate exceptionally large or small diamonds. To handle outliers, you could apply a data transformation (such as log transformation) or consider removing extreme values based on domain knowledge or business requirements."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d88f6fa",
   "metadata": {},
   "source": [
    "2. Cut:\n",
    "The cut variable represents the quality of the diamond's cut. As a categorical variable, we can visualize its distribution using a bar plot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "093259e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "sns.countplot(data=df, x='cut')\n",
    "plt.title('Distribution of Cut')\n",
    "plt.xlabel('Cut')\n",
    "plt.ylabel('Count')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd648995",
   "metadata": {},
   "source": [
    "The bar plot shows the count of diamonds for each cut category. It allows us to observe the distribution of diamond cuts. Outliers are not applicable in this categorical variable."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89575666",
   "metadata": {},
   "source": [
    "3. Color:\n",
    "The color variable represents the color grade of the diamond. Let's visualize its distribution using a bar plot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4144f1bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "sns.countplot(data=df, x='color', order=['D', 'E', 'F', 'G', 'H', 'I', 'J'])\n",
    "plt.title('Distribution of Color')\n",
    "plt.xlabel('Color')\n",
    "plt.ylabel('Count')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37cd34d6",
   "metadata": {},
   "source": [
    "The bar plot displays the count of diamonds for each color grade. It helps to understand the distribution of diamond colors. Outliers are not applicable in this categorical variable."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0380562",
   "metadata": {},
   "source": [
    "4. Clarity:\n",
    "The clarity variable represents the clarity grade of the diamond. Let's visualize its distribution using a bar plot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f130f53b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "sns.countplot(data=df, x='clarity', order=['IF', 'VVS1', 'VVS2', 'VS1', 'VS2', 'SI1', 'SI2', 'I1'])\n",
    "plt.title('Distribution of Clarity')\n",
    "plt.xlabel('Clarity')\n",
    "plt.ylabel('Count')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f77d4bda",
   "metadata": {},
   "source": [
    "The bar plot illustrates the count of diamonds for each clarity grade. It provides insights into the distribution of diamond clarity. Outliers are not applicable in this categorical variable."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "316494cb",
   "metadata": {},
   "source": [
    "5. Price:\n",
    "The price variable represents the price of the diamond. Let's visualize its distribution using a histogram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5b0f541a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 6))\n",
    "sns.histplot(data=df, x='price', bins=30)\n",
    "plt.title('Distribution of Price')\n",
    "plt.xlabel('Price')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83e3ef46",
   "metadata": {},
   "source": [
    "The histogram of diamond prices shows a right-skewed distribution, indicating that lower-priced diamonds are more common. Outliers in this variable may represent diamonds with exceptionally high prices. Handling outliers in price depends on the specific analysis or modeling task. They could be treated as influential data points, transformed, or removed based on domain knowledge or the desired analysis goals."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1941a895",
   "metadata": {},
   "source": [
    "## Include the other descriptive characteristics about the variables: Mean, Mode, Spread, and Tails (Chapter 2)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86c8b31f",
   "metadata": {},
   "source": [
    "Additional descriptive characteristics about the variables in the \"Price Prediction of Diamond\" dataset, including the mean, mode, spread, and information about the tails."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a7a0380",
   "metadata": {},
   "source": [
    "1. Carat:\n",
    "\n",
    "- Mean: The mean represents the average carat weight of the diamonds in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "085b7995",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean carat weight: 0.7979397478679852\n"
     ]
    }
   ],
   "source": [
    "carat_mean = df['carat'].mean()\n",
    "print(\"Mean carat weight:\", carat_mean)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "270f5317",
   "metadata": {},
   "source": [
    "- Mode: The mode indicates the most frequently occurring carat weight value in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d8e2634e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mode carat weight: 0.3\n"
     ]
    }
   ],
   "source": [
    "carat_mode = df['carat'].mode().values[0]\n",
    "print(\"Mode carat weight:\", carat_mode)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3293d46",
   "metadata": {},
   "source": [
    "- Spread: The spread refers to the range or variability of carat weights in the dataset. It can be measured using the standard deviation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ed204de4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Standard deviation of carat weight: 0.47401124440538067\n"
     ]
    }
   ],
   "source": [
    "carat_std = df['carat'].std()\n",
    "print(\"Standard deviation of carat weight:\", carat_std)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af486e30",
   "metadata": {},
   "source": [
    "- Tails: The tails of the distribution refer to the extreme values of carat weights. The skewness and kurtosis can provide insights into the shape and characteristics of the tails."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2caeff76",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Skewness of carat weight: 1.116645920812613\n",
      "Kurtosis of carat weight: 1.2566353326079294\n"
     ]
    }
   ],
   "source": [
    "carat_skewness = df['carat'].skew()\n",
    "carat_kurtosis = df['carat'].kurtosis()\n",
    "print(\"Skewness of carat weight:\", carat_skewness)\n",
    "print(\"Kurtosis of carat weight:\", carat_kurtosis)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26473f98",
   "metadata": {},
   "source": [
    "2. Cut, Color, Clarity:\n",
    "- Since these variables are categorical, descriptive characteristics such as mean, mode, spread, and tails are not applicable. We can focus on the frequency or count of each category to understand their distribution."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2024bf45",
   "metadata": {},
   "source": [
    "3. Price:\n",
    "\n",
    "- Mean: The mean represents the average price of the diamonds in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f99a6d35",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean price: 3932.799721913237\n"
     ]
    }
   ],
   "source": [
    "price_mean = df['price'].mean()\n",
    "print(\"Mean price:\", price_mean)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae4ea741",
   "metadata": {},
   "source": [
    "- Mode: The mode indicates the most frequently occurring price value in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "604c331c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mode price: 605\n"
     ]
    }
   ],
   "source": [
    "price_mode = df['price'].mode().values[0]\n",
    "print(\"Mode price:\", price_mode)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96776256",
   "metadata": {},
   "source": [
    "- Spread: The spread refers to the range or variability of diamond prices in the dataset. It can be measured using the standard deviation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "21a9aad7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Standard deviation of price: 3989.4397381463023\n"
     ]
    }
   ],
   "source": [
    "price_std = df['price'].std()\n",
    "print(\"Standard deviation of price:\", price_std)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98d6bed9",
   "metadata": {},
   "source": [
    "- Tails: The tails of the price distribution represent extreme values. The skewness and kurtosis can provide insights into the shape and characteristics of the tails."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d0818b78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Skewness of price: 1.618395283383529\n",
      "Kurtosis of price: 2.17769575924869\n"
     ]
    }
   ],
   "source": [
    "price_skewness = df['price'].skew()\n",
    "price_kurtosis = df['price'].kurtosis()\n",
    "print(\"Skewness of price:\", price_skewness)\n",
    "print(\"Kurtosis of price:\", price_kurtosis)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "942deb07",
   "metadata": {},
   "source": [
    "By analyzing these descriptive characteristics, we can gain insights into the central tendency, variability, and shape of the variables in the dataset. They provide a summary of the distribution and characteristics of the data, helping to understand the overall patterns and variability within the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e179115",
   "metadata": {},
   "source": [
    "## Using pg. 29 of your text as an example, compare two scenarios in your data using a PMF. Reminder, this isn’t comparing two variables against each other – it is the same variable, but a different scenario. Almost like a filter. The example in the book is first babies compared to all other babies, it is still the same variable, but breaking the data out based on criteria we are exploring (Chapter 3)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d720745c",
   "metadata": {},
   "source": [
    "Let's compare two scenarios using a Probability Mass Function (PMF) on the \"Price Prediction of Diamond\" dataset. In this case, we'll focus on the variable \"cut\" and compare two scenarios: \"Ideal\" cut diamonds versus \"Premium\" cut diamonds.\n",
    "\n",
    "First,  we'll create two separate dataframes for the two scenarios based on the \"cut\" variable:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "80c4f209",
   "metadata": {},
   "outputs": [],
   "source": [
    "ideal_cut_df = df[df['cut'] == 'Ideal']\n",
    "premium_cut_df = df[df['cut'] == 'Premium']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b54bf51",
   "metadata": {},
   "source": [
    "Now, let's calculate and plot the PMF for each scenario:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fdbbea16",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def calculate_pmf(data):\n",
    "    pmf = data['cut'].value_counts(normalize=True).sort_index()\n",
    "    return pmf\n",
    "\n",
    "# Calculate PMF for 'Ideal' cut diamonds\n",
    "ideal_cut_pmf = calculate_pmf(ideal_cut_df)\n",
    "\n",
    "# Calculate PMF for 'Premium' cut diamonds\n",
    "premium_cut_pmf = calculate_pmf(premium_cut_df)\n",
    "\n",
    "# Plot PMF for both scenarios\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.bar(ideal_cut_pmf.index, ideal_cut_pmf.values, label='Ideal Cut')\n",
    "plt.bar(premium_cut_pmf.index, premium_cut_pmf.values, label='Premium Cut')\n",
    "plt.title('PMF of Cut for Ideal vs. Premium Cut Diamonds')\n",
    "plt.xlabel('Cut')\n",
    "plt.ylabel('Probability')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1dcef33",
   "metadata": {},
   "source": [
    "By comparing the PMF of \"Ideal\" cut diamonds with \"Premium\" cut diamonds, we can observe the distribution of the \"cut\" variable for these two scenarios. The PMF provides the probability distribution of each cut category within the specified scenario.\n",
    "\n",
    "The resulting plot displays two bars, one representing the PMF for \"Ideal\" cut diamonds and the other for \"Premium\" cut diamonds. It allows for a visual comparison of the probability distribution of the \"cut\" variable in the two scenarios.\n",
    "\n",
    "This analysis helps us understand how the distribution of diamond cuts differs between the \"Ideal\" and \"Premium\" scenarios. We can observe the relative frequencies and compare the probabilities of each cut category within each scenario."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ac901cb",
   "metadata": {},
   "source": [
    "## Create 1 CDF with one of your variables, using page 41-44 as your guide, what does this tell you about your variable and how does it address the question you are trying to answer (Chapter 4)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77de8da9",
   "metadata": {},
   "source": [
    "We'll calculate the CDF for the \"carat\" variable:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "916277d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Sort the carat values in ascending order\n",
    "sorted_carat = np.sort(df['carat'])\n",
    "\n",
    "# Calculate the cumulative probabilities\n",
    "cumulative_prob = np.arange(1, len(sorted_carat) + 1) / len(sorted_carat)\n",
    "\n",
    "# Plot the CDF\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.plot(sorted_carat, cumulative_prob)\n",
    "plt.title('CDF of Carat Weight')\n",
    "plt.xlabel('Carat')\n",
    "plt.ylabel('Cumulative Probability')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6549da7d",
   "metadata": {},
   "source": [
    "The resulting plot displays the CDF of the \"carat\" variable. The x-axis represents the carat weights sorted in ascending order, while the y-axis represents the cumulative probability. The CDF provides information about the probability of observing a carat weight less than or equal to a specific value.\n",
    "\n",
    "By analyzing the CDF, we can answer questions related to the distribution of carat weights. For example, we can determine the probability of finding a diamond with a carat weight below a certain threshold. Additionally, we can observe how the probability changes as carat weight increases, allowing us to understand the distribution of carat weights in the dataset.\n",
    "\n",
    "The CDF provides a comprehensive view of the distribution of carat weights and allows for comparisons and analysis based on different thresholds or percentiles. It helps address questions such as the likelihood of finding diamonds within specific carat weight ranges and provides valuable insights into the variable's characteristics."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6f0584e",
   "metadata": {},
   "source": [
    "## Plot 1 analytical distribution and provide your analysis on how it applies to the dataset you have chosen (Chapter 5)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9e50cfb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Fit the log-normal distribution to diamond prices\n",
    "shape, loc, scale = lognorm.fit(df['price'], loc=0)\n",
    "\n",
    "# Generate a range of values for the x-axis\n",
    "x = np.linspace(df['price'].min(), df['price'].max(), 100)\n",
    "\n",
    "# Calculate the probability density function (PDF) using the fitted parameters\n",
    "pdf = lognorm.pdf(x, shape, loc, scale)\n",
    "\n",
    "# Plot the histogram of diamond prices\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.hist(df['price'], bins=30, density=True, alpha=0.5, label='Data')\n",
    "\n",
    "# Plot the analytical distribution (log-normal) PDF\n",
    "plt.plot(x, pdf, 'r-', label='Log-Normal Distribution')\n",
    "\n",
    "plt.title('Distribution of Diamond Prices')\n",
    "plt.xlabel('Price')\n",
    "plt.ylabel('Density')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27808b37",
   "metadata": {},
   "source": [
    "The resulting plot displays the histogram of diamond prices from the dataset as well as the probability density function (PDF) of the fitted log-normal distribution. By comparing the analytical distribution (log-normal) with the data distribution, we can analyze how well the distribution fits the dataset.\n",
    "\n",
    "In this example, we selected the log-normal distribution as an analytical distribution to compare against the diamond price data. The log-normal distribution is often used to model skewed positive data, making it suitable for modeling prices or financial data.\n",
    "\n",
    "By visually comparing the histogram of diamond prices with the PDF of the log-normal distribution, we can assess how well the distribution fits the data. If the log-normal distribution closely matches the shape and characteristics of the data distribution, it suggests that the log-normal distribution is a reasonable approximation for modeling diamond prices in this dataset.\n",
    "\n",
    "Analyzing the fit of an analytical distribution to the dataset provides insights into the underlying probabilistic nature of the variable. It helps in understanding the distribution's parameters and can guide further analysis or modeling tasks, such as generating synthetic data or estimating probabilities based on the fitted distribution."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d988b92",
   "metadata": {},
   "source": [
    "## Create two scatter plots comparing two variables and provide your analysis on correlation and causation. Remember, covariance, Pearson’s correlation, and Non-Linear Relationships should also be considered during your analysis (Chapter 7).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c2673050",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a scatter plot of carat vs. price\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.scatter(df['carat'], df['price'])\n",
    "plt.title('Scatter Plot: Carat vs. Price')\n",
    "plt.xlabel('Carat')\n",
    "plt.ylabel('Price')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21985041",
   "metadata": {},
   "source": [
    "1. Correlation: By visually inspecting the scatter plots, we can assess the correlation between the variables. A scatter plot with a clear pattern or trend suggests a correlation between the two variables. Positive correlation indicates that as one variable increases, the other tends to increase as well, while negative correlation indicates an inverse relationship.\n",
    "\n",
    "2. Covariance: The scatter plots allow us to assess the covariance between the variables. If the points in the scatter plot are clustered closely around a line or exhibit a linear pattern, it indicates a higher covariance between the variables. Covariance measures the direction and strength of the relationship between variables.\n",
    "\n",
    "3. Pearson's correlation: To quantify the correlation, we can calculate the Pearson's correlation coefficient. It measures the linear relationship between two variables, ranging from -1 (perfect negative correlation) to 1 (perfect positive correlation), with 0 indicating no correlation. We can calculate Pearson's correlation coefficient as follows:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4af0e585",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot: Carat vs. Depth\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.scatter(df['carat'], df['depth'])\n",
    "plt.title('Scatter Plot: Carat vs. Depth')\n",
    "plt.xlabel('Carat')\n",
    "plt.ylabel('Depth')\n",
    "plt.show()\n",
    "\n",
    "# Scatter plot: Carat vs. Table\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.scatter(df['carat'], df['table'])\n",
    "plt.title('Scatter Plot: Carat vs. Table')\n",
    "plt.xlabel('Carat')\n",
    "plt.ylabel('Table')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7407d43b",
   "metadata": {},
   "source": [
    "4. Non-linear relationships: It's important to consider the possibility of non-linear relationships between the variables. Scatter plots allow us to identify non-linear patterns such as curves, clusters, or other non-linear trends. In such cases, linear correlation measures may not accurately capture the relationship between the variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "537f2bcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearson's correlation coefficient (Carat vs. Depth): 0.028224314279048198\n",
      "Pearson's correlation coefficient (Carat vs. Table): 0.18161754651524428\n"
     ]
    }
   ],
   "source": [
    "pearson_corr_depth = df['carat'].corr(df['depth'])\n",
    "pearson_corr_table = df['carat'].corr(df['table'])\n",
    "print(\"Pearson's correlation coefficient (Carat vs. Depth):\", pearson_corr_depth)\n",
    "print(\"Pearson's correlation coefficient (Carat vs. Table):\", pearson_corr_table)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d42f1636",
   "metadata": {},
   "source": [
    "By analyzing the scatter plots, assessing the covariance, and calculating Pearson's correlation coefficient, we can gain insights into the correlation between the variables. This analysis helps us understand the relationship between the variables and provides information about the strength and direction of the correlation. Additionally, it allows for the detection of non-linear relationships and aids in determining the appropriateness of linear correlation measures."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48f180b7",
   "metadata": {},
   "source": [
    "## Conduct a test on your hypothesis using one of the methods covered in Chapter 9."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "52068f8d",
   "metadata": {},
   "source": [
    "- we'll perform a simple linear regression analysis to test the hypothesis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ce507c0d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                  price   R-squared:                       0.849\n",
      "Model:                            OLS   Adj. R-squared:                  0.849\n",
      "Method:                 Least Squares   F-statistic:                 3.041e+05\n",
      "Date:                Wed, 24 May 2023   Prob (F-statistic):               0.00\n",
      "Time:                        21:46:01   Log-Likelihood:            -4.7273e+05\n",
      "No. Observations:               53940   AIC:                         9.455e+05\n",
      "Df Residuals:                   53938   BIC:                         9.455e+05\n",
      "Df Model:                           1                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "const      -2256.3606     13.055   -172.830      0.000   -2281.949   -2230.772\n",
      "carat       7756.4256     14.067    551.408      0.000    7728.855    7783.996\n",
      "==============================================================================\n",
      "Omnibus:                    14025.341   Durbin-Watson:                   0.986\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           153030.525\n",
      "Skew:                           0.939   Prob(JB):                         0.00\n",
      "Kurtosis:                      11.035   Cond. No.                         3.65\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
     ]
    }
   ],
   "source": [
    "# Add a constant term to the data for the intercept in the regression model\n",
    "X = sm.add_constant(df['carat'])\n",
    "y = df['price']\n",
    "\n",
    "# Fit the linear regression model\n",
    "model = sm.OLS(y, X).fit()\n",
    "\n",
    "# Print the summary of the regression model\n",
    "print(model.summary())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8cb21fb",
   "metadata": {},
   "source": [
    "After fitting the linear regression model, the model.summary() function provides a summary of the regression results, including coefficients, standard errors, t-values, and p-values. The summary output will provide the necessary information to assess the statistical significance of the carat weight variable.\n",
    "\n",
    "By examining the p-value associated with the carat weight coefficient in the summary output, we can determine whether the carat weight has a statistically significant impact on the price. If the p-value is less than the chosen significance level (e.g., 0.05), it indicates that the carat weight has a significant effect on the price.\n",
    "\n",
    "I apologize for any confusion caused by the previous incomplete code. This revised code will provide the necessary statistical information for testing the hypothesis that the carat weight of a diamond has a significant impact on its price using linear regression analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e84b7a16",
   "metadata": {},
   "source": [
    "## For this project, conduct a regression analysis on either one dependent and one explanatory variable, or multiple explanatory variables (Chapter 10 & 11)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8dc128d6",
   "metadata": {},
   "source": [
    "Let's conduct a regression analysis on the \"Price Prediction of Diamond\" dataset using one dependent variable (price) and multiple explanatory variables (carat, cut, clarity, and color). This analysis will help us understand how these variables collectively impact the price of diamonds. Here's how we can perform the regression analysis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a1ebc0aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create dummy variables for categorical variables\n",
    "df = pd.get_dummies(df, columns=['cut', 'clarity', 'color'], drop_first=True)\n",
    "\n",
    "# Define the dependent variable (y) and explanatory variables (X)\n",
    "X = df[['carat', 'cut_Good', 'cut_Ideal', 'cut_Premium', 'cut_Very Good',\n",
    "        'clarity_IF', 'clarity_SI1', 'clarity_SI2', 'clarity_VS1', 'clarity_VS2',\n",
    "        'clarity_VVS1', 'clarity_VVS2', 'color_E', 'color_F', 'color_G', 'color_H',\n",
    "        'color_I', 'color_J']]\n",
    "y = df['price']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "7e98009a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                  price   R-squared:                       0.916\n",
      "Model:                            OLS   Adj. R-squared:                  0.916\n",
      "Method:                 Least Squares   F-statistic:                 3.264e+04\n",
      "Date:                Wed, 24 May 2023   Prob (F-statistic):               0.00\n",
      "Time:                        22:02:03   Log-Likelihood:            -4.5699e+05\n",
      "No. Observations:               53940   AIC:                         9.140e+05\n",
      "Df Residuals:                   53921   BIC:                         9.142e+05\n",
      "Df Model:                          18                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "=================================================================================\n",
      "                    coef    std err          t      P>|t|      [0.025      0.975]\n",
      "---------------------------------------------------------------------------------\n",
      "const         -7362.8022     51.684   -142.458      0.000   -7464.103   -7261.501\n",
      "carat          8886.1289     12.034    738.437      0.000    8862.543    8909.715\n",
      "cut_Good        655.7674     33.634     19.497      0.000     589.844     721.690\n",
      "cut_Ideal       998.2544     30.656     32.563      0.000     938.168    1058.341\n",
      "cut_Premium     869.3959     30.931     28.108      0.000     808.771     930.021\n",
      "cut_Very Good   848.7169     31.277     27.135      0.000     787.414     910.020\n",
      "clarity_IF     5419.6468     52.136    103.952      0.000    5317.460    5521.834\n",
      "clarity_SI1    3573.6880     44.598     80.132      0.000    3486.276    3661.100\n",
      "clarity_SI2    2625.9500     44.788     58.630      0.000    2538.164    2713.736\n",
      "clarity_VS1    4534.8790     45.535     99.591      0.000    4445.630    4624.128\n",
      "clarity_VS2    4217.8291     44.841     94.061      0.000    4129.940    4305.719\n",
      "clarity_VVS1   5072.0276     48.211    105.205      0.000    4977.534    5166.521\n",
      "clarity_VVS2   4967.1994     46.891    105.932      0.000    4875.293    5059.105\n",
      "color_E        -211.6825     18.316    -11.557      0.000    -247.582    -175.783\n",
      "color_F        -303.3100     18.509    -16.387      0.000    -339.589    -267.031\n",
      "color_G        -506.1995     18.122    -27.933      0.000    -541.719    -470.680\n",
      "color_H        -978.6977     19.272    -50.784      0.000   -1016.471    -940.925\n",
      "color_I       -1440.3019     21.646    -66.538      0.000   -1482.729   -1397.875\n",
      "color_J       -2325.2224     26.723    -87.013      0.000   -2377.599   -2272.846\n",
      "==============================================================================\n",
      "Omnibus:                    15285.474   Durbin-Watson:                   0.907\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           183262.957\n",
      "Skew:                           1.022   Prob(JB):                         0.00\n",
      "Kurtosis:                      11.796   Cond. No.                         37.8\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
     ]
    }
   ],
   "source": [
    "# Add a constant term to the data for the intercept in the regression model\n",
    "X = sm.add_constant(X)\n",
    "\n",
    "# Fit the regression model\n",
    "model = sm.OLS(y, X).fit()\n",
    "\n",
    "# Print the summary of the regression model\n",
    "print(model.summary())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15ea7362",
   "metadata": {},
   "source": [
    "The regression model will provide information on the coefficients, standard errors, t-values, and p-values for each explanatory variable. The summary output will also include the R-squared value, which indicates the proportion of variance in the dependent variable explained by the model.\n",
    "\n",
    "Analysis:\n",
    "By examining the coefficients and their corresponding p-values in the summary output, we can determine the significance and direction of the relationships between the explanatory variables and the diamond price. A positive coefficient indicates a positive relationship, while a negative coefficient indicates a negative relationship.\n",
    "\n",
    "The p-values associated with the coefficients indicate the statistical significance of each variable. If a p-value is less than the chosen significance level (e.g., 0.05), it suggests that the corresponding variable has a significant impact on the price. Conversely, if a p-value is greater than the significance level, it indicates that the variable may not have a significant effect on the price.\n",
    "\n",
    "The R-squared value provides an overall measure of how well the regression model fits the data. A higher R-squared value indicates a better fit, implying that the chosen explanatory variables collectively explain more of the variation in the diamond price.\n",
    "\n",
    "By performing this regression analysis, we can gain insights into the relationships between the explanatory variables (carat, cut, clarity, and color) and the diamond price. It helps us understand the significance of each variable and their collective impact on the price, providing valuable information for predicting and understanding diamond prices."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e3981ee",
   "metadata": {},
   "source": [
    "## Statistical/Hypothetical Question\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "efd4e9fb",
   "metadata": {},
   "source": [
    "The statistical/hypothetical question addressed in this analysis was: \"Does the carat weight of a diamond have a significant impact on its price?\" The hypothesis suggested that the carat weight would influence the price of diamonds.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24ffa864",
   "metadata": {},
   "source": [
    "## Outcome of EDA:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5a6a299",
   "metadata": {},
   "source": [
    "During the EDA, we analyzed the \"Price Prediction of Diamond\" dataset and performed various statistical analyses. We examined the distribution of variables, identified outliers, calculated descriptive statistics, and explored relationships between variables. We also conducted a linear regression analysis to assess the impact of the carat weight on diamond prices.\n",
    "\n",
    "The analysis revealed a positive correlation between the carat weight and the price of diamonds, indicating that as the carat weight increased, so did the price. The regression analysis confirmed the significance of the carat weight as a predictor of diamond prices."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9e0ee20",
   "metadata": {},
   "source": [
    "## Missed Aspects and Additional Variables:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fea8a19e",
   "metadata": {},
   "source": [
    "While the analysis focused on the carat weight, other variables in the dataset, such as cut, clarity, and color, could have provided valuable insights. Including these variables in the analysis would have allowed us to examine their individual and combined effects on diamond prices. By incorporating multiple explanatory variables, we could have obtained a more comprehensive understanding of the factors influencing diamond prices.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f140538",
   "metadata": {},
   "source": [
    "## Incorrect Assumptions:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "824516c5",
   "metadata": {},
   "source": [
    "One potential incorrect assumption made during the analysis could be the linearity assumption in the linear regression model. Linear regression assumes a linear relationship between the independent and dependent variables. However, it is possible that the relationship between the carat weight and price may not be strictly linear. Using more advanced regression techniques, such as polynomial regression or nonlinear regression, could have accounted for potential nonlinear relationships and provided a better fit for the data.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c8643d7",
   "metadata": {},
   "source": [
    "## Challenges and Areas of Incomplete Understanding:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc6b27b9",
   "metadata": {},
   "source": [
    "During the analysis, challenges were encountered in interpreting certain statistical concepts and techniques. Understanding the nuances of regression analysis, including assumptions and model evaluation metrics, required careful consideration and further research. Additionally, exploring and selecting the most appropriate variables for analysis required domain knowledge and expertise in the diamond industry.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa780d57",
   "metadata": {},
   "source": [
    "## Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b23fce86",
   "metadata": {},
   "source": [
    "In conclusion, the EDA of the \"Price Prediction of Diamond\" dataset focused on examining the impact of carat weight on diamond prices. While the analysis provided valuable insights, there were missed opportunities to explore additional variables and consider potential nonlinear relationships. Further analysis incorporating variables like cut, clarity, and color, and utilizing advanced regression techniques could enhance the understanding of the factors influencing diamond prices. The challenges faced during the analysis emphasized the need for continuous learning and domain expertise to perform thorough and meaningful data analysis.\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "17fe9f2c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
